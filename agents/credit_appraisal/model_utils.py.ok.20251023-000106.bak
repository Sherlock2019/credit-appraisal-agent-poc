# agents/credit_appraisal/model_utils.py
from __future__ import annotations
import os
import json
import joblib
import numpy as np
import pandas as pd
from typing import List

MODELS_ROOT = os.path.expanduser("~/demo-library/agents/credit_appraisal/models")
PROD_DIR = os.path.join(MODELS_ROOT, "production")

# Minimal baseline feature list (align with your agent)
FEATURES: List[str] = [
    "income", "loan_amount", "loan_term_months", "debt_to_income",
    "credit_history_length", "num_delinquencies", "current_loans",
    "collateral_value"
]

def _baseline_model():
    # super simple “probability” model mock (for cold start)
    class Baseline:
        def predict_proba(self, X):
            # center around 0.5
            p = 0.5 + 0.1 * np.tanh(np.nan_to_num(X).mean(axis=1) / (X.std() + 1e-6))
            p = np.clip(p, 0.05, 0.95)
            return np.vstack([1 - p, p]).T
    return Baseline()

def load_active_model():
    """
    Load promoted production model; fall back to baseline if missing.
    """
    prod_file = os.path.join(PROD_DIR, "credit_model.joblib")
    try:
        if os.path.exists(prod_file):
            return joblib.load(prod_file)
    except Exception:
        pass
    return _baseline_model()

def ensure_features(df: pd.DataFrame) -> pd.DataFrame:
    out = df.copy()
    for c in FEATURES:
        if c not in out.columns:
            out[c] = 0.0
    return out[FEATURES]

