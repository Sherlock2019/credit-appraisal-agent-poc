# services/api/routers/reports.py
from __future__ import annotations
import os
from typing import Optional
from fastapi import APIRouter, HTTPException
from fastapi.responses import FileResponse

ROOT = os.path.expanduser("~/demo-library")
RUNS_ROOT = os.path.join(ROOT, "services", "api", ".runs")
os.makedirs(RUNS_ROOT, exist_ok=True)

router = APIRouter()

@router.get("/v1/runs/{run_id}/report")
def download_report(run_id: str, format: str = "pdf"):
    """
    format: pdf | scores_csv | explanations_csv | csv | json
    (csv = merged CSV; json = summary JSON)
    """
    run_dir = os.path.join(RUNS_ROOT, run_id)
    if not os.path.isdir(run_dir):
        raise HTTPException(status_code=404, detail=f"Run {run_id} not found")

    def ensure(path: Optional[str]):
        if not path or not os.path.exists(path):
            raise HTTPException(status_code=404, detail=f"{format} file not found for run {run_id}")
        return path

    if format == "pdf":
        candidates = [f for f in os.listdir(run_dir) if f.lower().endswith(".pdf")]
        if not candidates:
            raise HTTPException(status_code=404, detail="PDF not found")
        path = os.path.join(run_dir, candidates[0])
        return FileResponse(path, media_type="application/pdf", filename=os.path.basename(path))

    elif format == "scores_csv":
        path = ensure(os.path.join(run_dir, "scores.csv"))
        return FileResponse(path, media_type="text/csv", filename="scores.csv")

    elif format == "explanations_csv":
        path = ensure(os.path.join(run_dir, "explanations.csv"))
        return FileResponse(path, media_type="text/csv", filename="explanations.csv")

    elif format == "csv":
        path = ensure(os.path.join(run_dir, "merged.csv"))
        return FileResponse(path, media_type="text/csv", filename="merged.csv")

    elif format == "json":
        path = ensure(os.path.join(run_dir, "summary.json"))
        return FileResponse(path, media_type="application/json", filename="summary.json")

    else:
        raise HTTPException(status_code=400, detail=f"Unsupported format: {format}")
